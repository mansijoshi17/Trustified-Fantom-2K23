{
  "address": "0x250e787121c8dafea0c94218b52d12caa041aee8",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "CredCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "IssueCred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "merkleTreeDepth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "zeroValue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "credURI",
          "type": "string"
        }
      ],
      "name": "GenerateCred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "credId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "identityCommitment",
          "type": "uint256"
        }
      ],
      "name": "issueCredToTrustifiedIssuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd845becf380934a97e155a126e2dccf4fbe518191169a2e23568d0a0d3c0fc2d",
  "receipt": {
    "to": null,
    "from": "0x3fe0ab910ea2f59d4e7ee7375fa69acff238b798",
    "contractAddress": "0x250e787121c8dafea0c94218b52d12caa041aee8",
    "transactionIndex": "0xb",
    "gasUsed": "0x158c826",
    "logsBloom": "0x
    "blockHash": "0x12a648a3120a84f7fa68ceacc45d278fc8a16740904e3131085fd1df135f9a2c",
    "transactionHash": "0xd845becf380934a97e155a126e2dccf4fbe518191169a2e23568d0a0d3c0fc2d",
    "logs": [],
    "blockNumber": "0xdb08",
    "cumulativeGasUsed": "0x0",
    "status": "0x1"
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "133aff377208b399e6c8a5407164799a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"CredCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"IssueCred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"merkleTreeDepth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zeroValue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"credURI\",\"type\":\"string\"}],\"name\":\"GenerateCred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"credId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"}],\"name\":\"issueCredToTrustifiedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrustifiedCreds.sol\":\"TrustifiedCreds\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/TrustifiedCreds.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\n// import \\\"@creds-protocol/contracts/CredsIssuer.sol\\\";\\n\\ncontract TrustifiedCreds {\\n    using Counters for Counters.Counter;\\n    Counters.Counter private _credIds;\\n\\n    address public owner;\\n\\n    event CredCreated(address, uint256, uint256, uint256, string);\\n    event IssueCred(address, uint256, uint256);\\n\\n    function GenerateCred(\\n        uint256 merkleTreeDepth,\\n        uint256 zeroValue,\\n        string memory credURI\\n    ) public {\\n        require(msg.sender == owner, \\\"Only Owner can call this\\\");\\n        uint256 _credId = _credIds.current();\\n        _credIds.increment();\\n        // createCred(_credId, merkleTreeDepth, zeroValue, msg.sender, credURI);\\n        emit CredCreated(\\n            msg.sender,\\n            _credId,\\n            merkleTreeDepth,\\n            zeroValue,\\n            credURI\\n        );\\n    }\\n\\n    function issueCredToTrustifiedIssuer(\\n        uint256 credId,\\n        uint256 identityCommitment\\n    ) public {\\n        require(msg.sender == owner, \\\"Only Owner can call this\\\");\\n        // addIdentity(credId, identityCommitment);\\n        emit IssueCred(msg.sender, credId, identityCommitment);\\n    }\\n}\\n\",\"keccak256\":\"0x4ec471fbe4562b2d8b0992072c515e0c2e77f583de5a7f929434a1a05420bd00\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106df806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630e45a38b14610046578063368e8c71146100625780638da5cb5b1461007e575b600080fd5b610060600480360381019061005b919061031f565b61009c565b005b61007c6004803603810190610077919061035b565b61016b565b005b610086610258565b604051610093919061043c565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610123906104e8565b60405180910390fd5b7fcda9c0b7f5ea133e31c0408e8461c7f8fa815916ebe42a0372fefea75fd1943c33838360405161015f93929190610457565b60405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906104e8565b60405180910390fd5b6000610207600061027e565b9050610213600061028c565b7f2ed4f0a950535d9dbe363dbcdaedbbdf03aa9f33d5b1b70b74554debef4d10f4338286868660405161024a95949392919061048e565b60405180910390a150505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600001549050919050565b6001816000016000828254019250508190555050565b60006102b56102b08461052d565b610508565b9050828152602081018484840111156102cd57600080fd5b6102d88482856105b6565b509392505050565b600082601f8301126102f157600080fd5b81356103018482602086016102a2565b91505092915050565b60008135905061031981610692565b92915050565b6000806040838503121561033257600080fd5b60006103408582860161030a565b92505060206103518582860161030a565b9150509250929050565b60008060006060848603121561037057600080fd5b600061037e8682870161030a565b935050602061038f8682870161030a565b925050604084013567ffffffffffffffff8111156103ac57600080fd5b6103b8868287016102e0565b9150509250925092565b6103cb8161057a565b82525050565b60006103dc8261055e565b6103e68185610569565b93506103f68185602086016105c5565b6103ff81610658565b840191505092915050565b6000610417601883610569565b915061042282610669565b602082019050919050565b610436816105ac565b82525050565b600060208201905061045160008301846103c2565b92915050565b600060608201905061046c60008301866103c2565b610479602083018561042d565b610486604083018461042d565b949350505050565b600060a0820190506104a360008301886103c2565b6104b0602083018761042d565b6104bd604083018661042d565b6104ca606083018561042d565b81810360808301526104dc81846103d1565b90509695505050505050565b600060208201905081810360008301526105018161040a565b9050919050565b6000610512610523565b905061051e82826105f8565b919050565b6000604051905090565b600067ffffffffffffffff82111561054857610547610629565b5b61055182610658565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006105858261058c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156105e35780820151818401526020810190506105c8565b838111156105f2576000848401525b50505050565b61060182610658565b810181811067ffffffffffffffff821117156106205761061f610629565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79204f776e65722063616e2063616c6c20746869730000000000000000600082015250565b61069b816105ac565b81146106a657600080fd5b5056fea2646970667358221220da7055ddda17e49e6067d3fec5b955367f11f3bb0080e0a49caa707da009320364736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630e45a38b14610046578063368e8c71146100625780638da5cb5b1461007e575b600080fd5b610060600480360381019061005b919061031f565b61009c565b005b61007c6004803603810190610077919061035b565b61016b565b005b610086610258565b604051610093919061043c565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610123906104e8565b60405180910390fd5b7fcda9c0b7f5ea133e31c0408e8461c7f8fa815916ebe42a0372fefea75fd1943c33838360405161015f93929190610457565b60405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906104e8565b60405180910390fd5b6000610207600061027e565b9050610213600061028c565b7f2ed4f0a950535d9dbe363dbcdaedbbdf03aa9f33d5b1b70b74554debef4d10f4338286868660405161024a95949392919061048e565b60405180910390a150505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600001549050919050565b6001816000016000828254019250508190555050565b60006102b56102b08461052d565b610508565b9050828152602081018484840111156102cd57600080fd5b6102d88482856105b6565b509392505050565b600082601f8301126102f157600080fd5b81356103018482602086016102a2565b91505092915050565b60008135905061031981610692565b92915050565b6000806040838503121561033257600080fd5b60006103408582860161030a565b92505060206103518582860161030a565b9150509250929050565b60008060006060848603121561037057600080fd5b600061037e8682870161030a565b935050602061038f8682870161030a565b925050604084013567ffffffffffffffff8111156103ac57600080fd5b6103b8868287016102e0565b9150509250925092565b6103cb8161057a565b82525050565b60006103dc8261055e565b6103e68185610569565b93506103f68185602086016105c5565b6103ff81610658565b840191505092915050565b6000610417601883610569565b915061042282610669565b602082019050919050565b610436816105ac565b82525050565b600060208201905061045160008301846103c2565b92915050565b600060608201905061046c60008301866103c2565b610479602083018561042d565b610486604083018461042d565b949350505050565b600060a0820190506104a360008301886103c2565b6104b0602083018761042d565b6104bd604083018661042d565b6104ca606083018561042d565b81810360808301526104dc81846103d1565b90509695505050505050565b600060208201905081810360008301526105018161040a565b9050919050565b6000610512610523565b905061051e82826105f8565b919050565b6000604051905090565b600067ffffffffffffffff82111561054857610547610629565b5b61055182610658565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006105858261058c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156105e35780820151818401526020810190506105c8565b838111156105f2576000848401525b50505050565b61060182610658565b810181811067ffffffffffffffff821117156106205761061f610629565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79204f776e65722063616e2063616c6c20746869730000000000000000600082015250565b61069b816105ac565b81146106a657600080fd5b5056fea2646970667358221220da7055ddda17e49e6067d3fec5b955367f11f3bb0080e0a49caa707da009320364736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/TrustifiedCreds.sol:TrustifiedCreds",
        "label": "_credIds",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)5_storage"
      },
      {
        "astId": 84,
        "contract": "contracts/TrustifiedCreds.sol:TrustifiedCreds",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_struct(Counter)5_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/TrustifiedCreds.sol:TrustifiedCreds",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}